package com.christmas.letter.model;

import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBAttribute;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBHashKey;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBTable;
import lombok.AllArgsConstructor;
import lombok.Data;
import lombok.Getter;
import lombok.NoArgsConstructor;
import software.amazon.awssdk.enhanced.dynamodb.mapper.annotations.DynamoDbPartitionKey;
import software.amazon.awssdk.services.dynamodb.model.AttributeValue;

import java.util.Collections;
import java.util.List;
import java.util.Map;

@Data
@AllArgsConstructor
@NoArgsConstructor
@DynamoDBTable(tableName = "christmas_letter")
public class LetterEntity {
    public static final String TABLE_NAME = "christmas_letter";
    public static final String EMAIL_KEY = "email";
    public static final String NAME_KEY = "name";
    public static final String WISHES_KEY = "wishes";
    public static final String DELIVERY_ADDRESS_KEY = "deliveryAddress";

//    @Getter(onMethod_ = {@DynamoDbPartitionKey, @DynamoDbAutoGeneratedUuid})
//    private String id;


//    @Getter(onMethod_ = {@DynamoDbSecondaryPartitionKey(indexNames = "email-index"),@DynamoDbSortKey})
    @DynamoDBHashKey(attributeName = "email")
    @Getter(onMethod_ = {@DynamoDbPartitionKey})
    private String email;

    @DynamoDBAttribute(attributeName = "name")
    private String name;

    @DynamoDBAttribute(attributeName = "wishes")
    private List<String> wishes;

    @DynamoDBAttribute(attributeName = "delivery_address")
    private String deliveryAddress;

    public LetterEntity(Map<String, AttributeValue> stringAttributeValueMap) {
        this.email = stringAttributeValueMap.containsKey(EMAIL_KEY) ? stringAttributeValueMap.get(EMAIL_KEY).s() : "";
        this.name = stringAttributeValueMap.containsKey(NAME_KEY) ? stringAttributeValueMap.get(NAME_KEY).s(): "";
        this.wishes = stringAttributeValueMap.containsKey(WISHES_KEY) ?
                stringAttributeValueMap.get(WISHES_KEY).l().stream().map(AttributeValue::s).toList() :
                Collections.emptyList();
        this.deliveryAddress = stringAttributeValueMap.containsKey(DELIVERY_ADDRESS_KEY) ?
                stringAttributeValueMap.get(DELIVERY_ADDRESS_KEY).s() : "";
    }
}
